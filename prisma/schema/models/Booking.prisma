model Booking {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  userId        String        @db.ObjectId
  barberId      String        @db.ObjectId
  serviceId     String        @db.ObjectId
  saloonOwnerId String        @db.ObjectId
  queueSlotId   String?       @db.ObjectId
  appointmentAt DateTime
  status        BookingStatus @default(PENDING)
  totalPrice    Float
  notes         String?
  barberName    String?
  barberImage   String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  // Relationships
  user        User        @relation(fields: [userId], references: [id])
  barber      Barber      @relation(fields: [barberId], references: [userId])
  service     Service     @relation(fields: [serviceId], references: [id])
  saloonOwner SaloonOwner @relation(fields: [saloonOwnerId], references: [userId])
  queueSlot   QueueSlot?  @relation(name: "BookingQueueSlot")

  LoyaltyRedemption LoyaltyRedemption[]

  @@map("bookings")
}
