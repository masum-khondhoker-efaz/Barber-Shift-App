model BarberDayOff {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  saloonOwnerId    String   @db.ObjectId
  barberId  String   @db.ObjectId
  date      DateTime // Specific date barber is unavailable
  reason    String? // e.g., "Vacation", "Sick"
  isAllDay  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  barber Barber @relation(fields: [barberId], references: [userId])
  user   User   @relation(fields: [saloonOwnerId], references: [id])

  @@map("barber_days_off")
}
